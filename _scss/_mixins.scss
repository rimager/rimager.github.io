// ROUND CORNERS
// --------------------------------------------------

// @include rounded(VALUE);
@mixin rounded($radius:4px) {
  border-radius : $radius; }

// @include border-radius(VALUE,VALUE,VALUE,VALUE);
@mixin border-radius($topright: 0, $bottomright: 0, $bottomleft: 0, $topleft: 0) {
  border-top-right-radius : $topright;
  border-bottom-right-radius : $bottomright;
  border-bottom-left-radius : $bottomleft;
  border-top-left-radius : $topleft;
  background-clip : padding-box; }

// @include box-shadow(HORIZONTAL VERTICAL BLUR COLOR))
@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25)) {
  -webkit-box-shadow : $shadow;
  -moz-box-shadow : $shadow;
  box-shadow : $shadow; }

// @include drop-shadow(HORIZONTAL, VERTICAL, BLUR, ALPHA);
@mixin drop-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $alpha: 0.1) {
  -webkit-box-shadow : $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
  -moz-box-shadow : $x-axis $y-axis $blur rgba(0, 0, 0, $alpha);
  box-shadow : $x-axis $y-axis $blur rgba(0, 0, 0, $alpha); }

// @include text-shadow();
@mixin text-shadow($shadow: 0 2px 3px rgba(0,0,0,.25)) {
  text-shadow : $shadow; }

// @include opacity(VALUE);
@mixin opacity($opacity : .5) {
  opacity : $opacity; }

// TRANSFORMATIONS
// --------------------------------------------------

// @include rotate(VALUEdeg);
@mixin rotate($deg) {
  -webkit-transform : rotate($deg);
  -moz-transform : rotate($deg);
  -ms-transform : rotate($deg);
  -o-transform : rotate($deg);
  transform : rotate($deg); }

// @include scale(VALUE);
@mixin scale($ratio) {
  -webkit-transform : scale($ratio);
  -moz-transform : scale($ratio);
  -ms-transform : scale($ratio);
  -o-transform : scale($ratio);
  transform : scale($ratio); }

// @include skew(VALUE, VALUE);
@mixin skew($x: 0, $y: 0) {
  -webkit-transform : skew($x, $y);
  -moz-transform : skew($x, $y);
  -ms-transform : skew($x, $y);
  -o-transform : skew($x, $y);
  transform : skew($x, $y); }

// @include transition(PROPERTY DURATION DELAY(OPTIONAL) TIMING-FINCTION);
@mixin transition($transition) {
  -webkit-transition : $transition;
  -moz-transition : $transition;
  -ms-transition : $transition;
  -o-transition : $transition;
  transition : $transition; }

// @include translate(VALUE, VALUE)
@mixin translate($x: 0, $y: 0) {
  -webkit-transform : translate($x, $y);
  -moz-transform : translate($x, $y);
  -ms-transform : translate($x, $y);
  -o-transform : translate($x, $y);
  transform : translate($x, $y); }

@mixin translate3d($x: 0, $y: 0, $z: 0) {
  -webkit-transform : translate($x, $y, $z);
  -moz-transform : translate($x, $y, $z);
  -ms-transform : translate($x, $y, $z);
  -o-transform : translate($x, $y, $z);
  transform : translate($x, $y, $z); }

@mixin animation($name, $duration: 300ms, $delay: 0, $ease: ease) {
  -webkit-animation: $name $duration $delay $ease;
  -moz-animation:    $name $duration $delay $ease;
  -ms-animation:     $name $duration $delay $ease;}

// BACKGROUND
// --------------------------------------------------

// @include background-alpha(VALUE VALUE);
@mixin background-alpha($color: $white, $alpha: 1) {
  background-color : hsla(hue($color), saturation($color), lightness($color), $alpha); }

// @include background-size(VALUE VALUE);
@mixin background-size($size){
  -webkit-background-size : $size;
  -moz-background-size : $size;
  -o-background-size : $size;
  background-size : $size; }

// @include background-clip(VALUE); (border-box, padding-box, content-box)
@mixin background-clip($clip) {
  -webkit-background-clip : $clip;
  -moz-background-clip : $clip;
  background-clip : $clip; }

// @include box-sizing(VALUE); (border-box, padding-box, content-box)
@mixin box-sizing($boxsize: border-box) {
  -webkit-box-sizing : $boxsize;
  -moz-box-sizing : $boxsize;
  -ms-box-sizing : $boxsize;
  box-sizing : $boxsize; }

// For image replacement
@mixin hide-text() {
  text-indent : 100%;
  white-space : nowrap;
  overflow : hidden; }

// Hide from visual and speaking browsers
@mixin hidden() {
  display : none !important;
  visibility : hidden; }
.hidden {
  display: none;
  visibility: hidden;
}

// Hide but maintain layout
@mixin invisible() {
  visibility : hidden; }

// @include resize(VALUE) (none, both, horizontal, vertical, inherit)
@mixin resize($direction: both) {
  resize : $direction;
  overflow : auto; }

// @include userselect(VALUE) (all, element, none, text)
@mixin user-select($select) {
  -webkit-user-select : $select;
  -moz-user-select : $select;
  -o-user-select : $select;
  user-select : $select; }

// Hidden but available to speaking browsers
@mixin visuallyhidden() {
  overflow : hidden;
  position : absolute;
  clip : rect(0 0 0 0);
  height : 1px;
  width : 1px;
  margin : -1px;
  padding : 0;
  border : 0; }
